/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
       // WE need to start adding from back so use a stack
        
        Stack<Integer> s1 = new Stack<>();
        Stack<Integer> s2 = new Stack<>();
        
        while(l1!=null){
            s1.push(l1.val);
            l1=l1.next;
        }
        while(l2!=null){
            s2.push(l2.val);
            l2=l2.next;
        }
        
        ListNode res = new ListNode(0);
        int sum = 0;
        while(!s1.isEmpty() || !s2.isEmpty()){
            if(!s1.isEmpty()){
                sum = sum + s1.pop();
            }
             if(!s2.isEmpty()){
                sum = sum + s2.pop();
            }
            res.val = sum%10; //7  0
            ListNode head =  new ListNode(sum/10); //carry //0 //1
            head.next = res;
            res= head;
            sum = sum/10;//0
        }
        
        return res.val == 0? res.next : res;
        
     }
}