class Solution {
    public String minWindow(String s, String t) {
        
         if (s.length() == 0 || t.length() == 0) {
          return "";
      }
        
        HashMap<Character, Integer> map = new HashMap<Character, Integer>();
        
        char[] tarr = t.toCharArray(); // a ,b,c
        
        for(char c : tarr){
            map.put(c,map.getOrDefault(c,0)+1);
        }
        
        int required = map.size();
        int i = 0 ;
        int j = 0 ; 
        int formed = 0;
        int[] out = {-1, 0 , 0};
        
        HashMap<Character, Integer> map1 = new HashMap<Character, Integer>();
        
        while( j < s.length()){
           map1.put(s.charAt(j),map1.getOrDefault(s.charAt(j),0)+1);
             char g = s.charAt(j);
           if(map.containsKey(g) && map.get(g).intValue() == map1.get(g).intValue()){
               formed++;
           }
            
            while(i<=j && formed == required){
                char c = s.charAt(i);
                if (out[0] == -1 || j - i + 1 < out[0]) {
                  out[0] = j - i + 1;
                  out[1] = i;
                  out[2] = j;
              }
                
                map1.put(c, map1.get(c)-1);
                
                if(map.containsKey(c) && map1.get(c).intValue() < map.get(c).intValue()){
                    formed--;
                }
                
                
                i++;
            }
            
            
            j++;
            
        }
        

    return out[0] == -1 ? "" : s.substring(out[1], out[2]+1)    ;
        
    }
}